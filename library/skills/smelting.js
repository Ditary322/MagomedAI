// models/MineCraft/library/skills/smelting.js

const { log } = require('../../utils/logger');
const world   = require('../../world/structure_manager');
const { placeBlock } = require('./building');
// –ë—ã–ª–æ require('../../utils/navigation') ‚Äî –Ω–µ–≤–µ—Ä–Ω—ã–π –ø—É—Ç—å
const { goToNearestBlock } = require('../utils/navigation');
const mc      = require('../utils/mcdata');
const { handleItem } = require('../utils/itemHelper');

/**
 * –ü–µ—Ä–µ–ø–ª–∞–≤–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π —Å—ã—Ä—å–µ–≤–æ–π –ø—Ä–µ–¥–º–µ—Ç `itemName` –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ `num`.
 */
async function smeltItem(bot, itemName, num = 1) {
  // 1) –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ—Å—É—Ä—Å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–ø–ª–∞–≤–∏—Ç—å
  if (!mc.isSmeltable(itemName)) {
    log(bot, `‚ùå ${itemName} –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–ø–ª–∞–≤–∏—Ç—å.`);
    return false;
  }

  // 2) –î–æ—Å—Ç–∞—ë–º —Å—ã—Ä—å—ë
  const okRaw = await handleItem(bot, itemName, num);
  if (!okRaw) {
    log(bot, `‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ${num}√ó${itemName} –¥–ª—è –ø–µ—Ä–µ–ø–ª–∞–≤–∫–∏.`);
    return false;
  }

  // 3) –î–æ—Å—Ç–∞—ë–º —Ç–æ–ø–ª–∏–≤–æ (—É–≥–æ–ª—å)
  const okFuel = await handleItem(bot, 'coal', 1);
  if (!okFuel) {
    log(bot, `‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —É–≥–æ–ª—å –¥–ª—è –ø–µ—á–∏.`);
    return false;
  }

  // 4) –ò—â–µ–º –ø–µ—á—å
  let furnace = world.getNearestBlock(bot, 'furnace', 32);
  if (!furnace) {
    log(bot, 'üèóÔ∏è –ü–µ—á—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å—Ç–∞–≤–ª—é —Ä—è–¥–æ–º');
    const pos = bot.entity.position.floored().offset(2, 0, 0);
    await placeBlock(bot, 'furnace', pos.x, pos.y, pos.z);
    furnace = world.getNearestBlock(bot, 'furnace', 32);
    if (!furnace) {
      log(bot, '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—á—å');
      return false;
    }
  }

  // 5) –ü–æ–¥—Ö–æ–¥–∏–º –∫ –ø–µ—á–∏
  await goToNearestBlock(bot, 'furnace', 4);
  await bot.lookAt(furnace.position);

  log(bot, `üî• –ü–µ—Ä–µ–ø–ª–∞–≤–ª—è—é ${num}√ó${itemName}‚Ä¶`);
  const f = await bot.openFurnace(furnace);

  // 6) –ó–∞–≥—Ä—É–∑–∫–∞ —Å—ã—Ä—å—è –∏ —Ç–æ–ø–ª–∏–≤–∞
  try {
    await f.putInput(mc.getItemId(itemName), null, num);
    await f.putFuel(mc.getItemId('coal'), null, 1);
  } catch (err) {
    log(bot, `‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ –ø–µ—á—å: ${err.message}`);
    f.close();
    return false;
  }

  // 7) –ñ–¥—ë–º, –ø–æ–∫–∞ —Å—ã—Ä—å—ë –∏—Å—á–µ–∑–Ω–µ—Ç –∏–∑ –∏–Ω–ø—É—Ç–∞
  await new Promise(resolve => {
    const interval = setInterval(() => {
      const input = f.inputItem();
      if (!input || input.count === 0) {
        clearInterval(interval);
        f.close();
        log(bot, `‚úÖ ${itemName} –ø–µ—Ä–µ–ø–ª–∞–≤–ª–µ–Ω.`);
        resolve();
      }
    }, 1000);
  });

  return true;
}

/**
 * –ü–µ—Ä–µ–ø–ª–∞–≤–ª—è–µ—Ç –≤—Å—ë, —á—Ç–æ –µ—Å—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—á–∏—Ç–∞–µ–º –Ω–∞–ø—Ä—è–º—É—é).
 */
async function cookAll(bot, itemName) {
  // –°—á–∏—Ç–∞–µ–º, —Å–∫–æ–ª—å–∫–æ —Å—ã—Ä—å—è –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
  const count = bot.inventory.items()
    .filter(i => i.name === itemName)
    .reduce((sum, i) => sum + i.count, 0);
  if (count === 0) {
    bot.chat(`‚ùå –£ –º–µ–Ω—è –Ω–µ—Ç ${itemName} –¥–ª—è –≥–æ—Ç–æ–≤–∫–∏.`);
    return false;
  }

  bot.chat(`üî• –ì–æ—Ç–æ–≤–ª—é ${count}√ó${itemName}‚Ä¶`);
  return await smeltItem(bot, itemName, count);
}

module.exports = {
  smeltItem,
  cookAll
};
