const { log }             = require('../../utils/logger');
const { getInventoryCounts } = require('../world/inventory');
const mc                  = require('../utils/mcdata');
const { handleItem }      = require('../utils/itemHelper');


async function equip(bot, itemName) {
  // 1) –î–æ—Å—Ç–∞—ë–º 1 —à—Ç—É–∫—É —á–µ—Ä–µ–∑ itemHelper
  const ok = await handleItem(bot, itemName, 1);
  if (!ok) {
    log(bot, `–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ${itemName}, —á—Ç–æ–±—ã –Ω–∞–¥–µ—Ç—å.`);
    return false;
  }

  // 2) –ü—Ä–µ–¥–º–µ—Ç —Ç–æ—á–Ω–æ –µ—Å—Ç—å ‚Äî –∏—â–µ–º –µ–≥–æ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
  const item = bot.inventory.items().find(i => i.name === itemName);
  if (!item) {
    log(bot, `–ü—Ä–µ–¥–º–µ—Ç ${itemName} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –ø–æ—Å–ª–µ handleItem.`);
    return false;
  }

  // 3) –≠–∫–∏–ø–∏—Ä—É–µ–º –≤ –Ω—É–∂–Ω—ã–π —Å–ª–æ—Ç
  if (itemName.includes('leggings')) {
    await bot.equip(item, 'legs');
  } else if (itemName.includes('boots')) {
    await bot.equip(item, 'feet');
  } else if (itemName.includes('helmet')) {
    await bot.equip(item, 'head');
  } else if (itemName.includes('chestplate') || itemName.includes('elytra')) {
    await bot.equip(item, 'torso');
  } else if (itemName.includes('shield')) {
    await bot.equip(item, 'off-hand');
  } else {
    await bot.equip(item, 'hand');
  }

  log(bot, `–ù–∞–¥–µ–ª ${itemName}.`);
  return true;
}


async function equipBestFood(bot) {
  // –ü–æ–ø—Ä–æ–±—É–µ–º –¥–æ—Å—Ç–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –µ–¥—ã –ø–µ—Ä–µ–¥ –≤—ã–±–æ—Ä–æ–º –ª—É—á—à–µ–π
  // (–º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ª—é–±–æ–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä 5)
  await handleItem(bot, 'cooked_beef', 5);

  const foods = bot.inventory.items().filter(item => mc.isFood(item.name));
  if (foods.length === 0) return false;

}


async function logInventory(bot) {
  const counts = getInventoryCounts(bot);
  if (!counts || Object.keys(counts).length === 0) {
    bot.chat("–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç.");
    return;
  }

  const message = Object.entries(counts)
    .map(([item, count]) => `${item} x${count}`)
    .join(', ');

  bot.chat(`üéí –£ –º–µ–Ω—è –µ—Å—Ç—å: ${message}`);
}

async function equipHighestAttack(bot) {
  let weapons = bot.inventory.items().filter(
    item => mc.isTool(item.name)
  );  

  if (weapons.length === 0) {
    weapons = bot.inventory.items().filter(
      item => item.name.includes('pickaxe') || item.name.includes('shovel')
    );
  }

  if (weapons.length === 0) return false;

  // TODO: –∑–∞–º–µ–Ω–∏—Ç—å sort –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–æ —É—Ä–æ–Ω—É, –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ
  weapons.sort((a, b) => b.attackDamage - a.attackDamage); // –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –µ—Å—Ç—å —Ç–∞–∫–æ–µ –ø–æ–ª–µ

  const weapon = weapons[0];
  if (weapon) {
    await bot.equip(weapon, 'hand');
    log(bot, `–í–æ–æ—Ä—É–∂–∏–ª—Å—è ${weapon.name}`);
    return true;
  }

  return false;
}

module.exports = {
  equip,
  equipHighestAttack,
  equipBestFood,
  logInventory
};

